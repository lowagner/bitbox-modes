tile/sprite property editing
    tiles:  damage
        0 tile is required to be no damage, passable.  can be water.
        1 tile is required to be no damage on top, impassable (although breakable is also possible)
    sprite:
        0 sprite is hero
        change invisibility color

defaults for tile translation (one sharp pokey one)


map-edit menu:
    map properties:
        can edit tile_map_width/height
    can also add a sprite - use L/R to choose
      jump to tile property editor with some button
      allow start from property to jump back


music editing:
    need track position (or song position) when playing the song or track

possible replacement idea for track editor:

16 track positions with 16x16 command*parameters:
    | name | values | description |
    |---|---|---|
    | break |  `00`  | ends the track commands early |
    | absolute octave | `OX`, with `X=0-f` | |
    | relative octave | `+X`, with `X=0-f` | `0-7` are positive changes, and `8-15` being negative |
    | volume | `VX`, with `X=0-f` | sets track volume |
    | note | `C, C#, ..., Bb, B, C, ... Eb` | plays a note, second partial octave is shaded funny |
    | wait | `WX`, with `X=0-f` | pauses command evaluation for `X`*song_speed frames (still plays notes if applicable) |
    | fade in | `<X`, with `X=0-f` | sets change-in-volume-over-time to `+X` units (1 unit of volume per beat, i.e. song_speed frames) |
    | fade out | `>X`, with `X=0-f` | sets change-in-volume-over-time to `-X` units |
    | vibrato depth | `~X`, with `X=0-f` | the bigger `X` is, the wider the frequency swing in vibrato |
    | vibrato rate | `𝜈X`, with `X=0-f` | the bigger `X` is, the faster the vibrato frequency |
    | inertia | `iX`, with `X=0-f` | note slides |
    | transpose | `TX`, with `X=0-f` | GLOBAL transpose song, with possible major/minor flips.  `T0` flips major/minor |
    | ??bend | `BX`, with `X=0-f` | pitch bend.  hit a note and go up (`X=0-7`) or down (`X=8-15`) |
    | song speed | `SX`, with `X=0-f` | change song_speed to `16-X`. |
    | randomize | `RX`, with `X=0-f` | randomizes the parameter of the command at location `X` |
    | jump | `JX`, with `X=0-f` | jump to track command `X`.  make sure there's a wait (e.g. `W4`) between `X` and the jump point (if `X` is earlier) |


if we allow track sizes up to 64:

    1 bit - high or low command
    high:
        1 bit - randomize or jump command
        6 bits - 64 track positions
    low:
        3 bits - 8 command types
        4 bits parameter

            0 break
            1 absolute octave
            2 volume
            3 note
            4 wait
            5 fade in
            6 fade out
            7 vibrato or inertia???
            .. song_speed, transpose left out


or with 32 track positions, you can sneakily get in up to 14 commands:

    1 bit - high or low command
    low:
        3 bits - 8 command types
        4 bits parameter

            0 break
            1 volume
            2 absolute octave
            3 note
            4 wait
            5 fade in
            6 fade out
            7 inertia
    high:
        2 bits:
            vibrato depth/rate  (2 commands in one due to parameter)
            song_transpose/song_speed,  (2 commands in one due to parameter)
            randomize, jump,
        5 bits - 32 track positions

OR for a 32 track, you can fit in 15 commands with a "long" command for RANDOMIZE.  
we can restrict JUMPing back only to the first 16 track positions.  squish vibrato in.

    0 break 
    1 octave (0-7 are absolute, 8-9 are positive relative changes, 10-11 are negative relative changes), instrument changes in last 4.
    2 volume:  set to zero for a rest
    3 note 
    4 wait:
        in units of sixteenth notes.
        0 = no wait 
        2 = eighth note
        4 = quarter note
        8 = half note
        15 = almost a whole note
      one sixteenth note is song_speed frames.
    5 fill: wait relative to measure, in quarter notes
        0: do nothing
        X: wait until the measure is X beats through, or skip waiting if that has passed
        e.g. to wait til the third beat, use F3
      this means that time signatures up to 16/4 can be represented with fills. 
    6 fade in 
    7 fade out 
    8 inertia 
    9 vibrato combined:  first two bits for depth, second two for rate
    10 transpose/instrument
    11 song speed 
    12 measure length - measured in units of quarter-notes per measure
        0 -> 16/4 -> 16*4 -> 64 smallest units (sixteenth notes) long
        1 -> 1/4
        2 -> 2/4
        3 -> 3/4
        4 -> 4/4
        5 -> 5/4
        6 -> 6/4
        7 -> 7/4
        8 -> 8/4
        9 -> etc.
        15 -> 15/4
      also use one quarter note equals 4*song_speed frames.
    13, 14 randomize 
    15 jump:  only can jump to first 16 track spots (though the jump can be anywhere)

old idea:
    track editor
        16 possible tracks, with 4 instrument lines each
        each track length:  anywhere from 4 to 32 (fixed globally).
        32*16*4 = 2048 notes, but each are specified by a nibble (half-byte)
        so 1024 bytes storage there.
        also keep track of the track's key (A maj, a min, etc.), although "unknown" is default.

        notes:
            0 (black) - stop noise
            2 (white) - repeat last note.
            1 (gray) - volume control
                the "common" gray control statements can wrap to the next track in a song,
                but any involving a pink block MUST come before the end of a track.

                if some sound was just playing (either by a colored or white block or blocks):
                    fade out previous note
                    fade to zero volume in as many blocks as the note was held
                        (white notes only count as one, since they are repeating something.)
                    if not as many gray blocks as color blocks, 
                        the note will continue sounding, unless black is encountered.
                    if there are more grays than blocks that the previous note was held:
                        fade out to 0% then fade in to 100%, then repeat.
                elif gray then some color (or white):
                    no note was sounding, fade in next note.
                    look ahead for next note, and count how long it is held, put into C.
                        (white counts as C=1).
                    also count how many G grays there are before the note is hit.
                    case G == C:
                        crescendo to 100% volume over G units of time, hit note at 100%.
                    case G < C:
                        crescendo to G/C*100% volume over G units of time,
                        then hit note with 100% volume.  (e.g. sudden loudness.)
                    case G > C:
                        crescendo to 100% volume over G units of time, then
                        hit color with C/G*100% volume.  
                        (e.g. dramatic fade in to very soft note)
                elif gray then black:
                    next note gets emphasis.
                    if multiple grays, that many notes get emphasis.
                now for UNCOMMON gray control statements
                elif gray then pink:
                    reset vibrato, slide, octave, volume, bitcrush,
                    and other instrument state variables to their start-of-the-song values.  
                        everything except "relative octave", which is temporary anyway,
                        as described below. (also it shouldn't be possible to do that anyway.)
                    also, read index increments to after pink, so that pink won't act again.
                elif gray then gray then pink:
                    toggle GLOBAL major/minor.  this only has an effect if a track is labeled in a key. 
                elif 2+X grays then pink:
                    (where X >= 1)
                    do not play the next X notes that you encounter.
                    or possibly randomize the next X notes (within the given key)

            3 (pink) - control/command
                if color then pink then same color:
                    toggle vibrato
                elif color then pink then a different color:
                    toggle inertia

                for pink to act as the beginning of one of the following control statements, 
                it must come after a white or a black,
                or a gray which was fading out something.  
                    (black gray pink resets stuff, as described above.)
                the only pink control statement which can survive a track changing
                    is the first one (if pink then a color);
                    i.e. if pink is the last color in a track, then any track which 
                    follows it in the song will get "relative octave" set to true:

                if pink then a color:
                    until a cease-noise black is encountered, octave is "relative".
                    when deciding to play the octave of the next note, check
                    what is closest to the previous note, going up, down, or staying same.
                    black values encountered in control statements (such as those found below)
                        DO NOT COUNT as a cease-noise black,
                        and so do not break the relative octave action.
                elif pink then black:
                    lower octave (if below the lowest, wrap around to highest)
                elif pink then white:
                    increase octave (if above the highest, wrap around to lowest)
                elif pink then gray:
                    toggle vibrato
                elif pink then pink,
                    then black:
                        decrease volume of instrument, but not all the way to zero.
                        (however, but something very quiet is.)
                    then gray:
                        toggle bitcrusher
                    then white:
                        increase volume of instrument, but not beyond some max.
                    then a color:
                        toggle slide, and
                        proceed in relative octaves until a cease-noise black occurs.
                elif pink then pink then pink:
                    then black
                        GLOBAL song speed down
                    then white
                        GLOBAL song speed up
                    then gray
                        GLOBAL song speed reset to initial
                    else:
                        GLOBAL song transpose.
                        some of them will switch from maj to min, or vice versa.

                        4   -> +1    (red).  do not toggle maj/min
                        5   -> +2   if maj, switch to min
                        6   -> +3   
                        7   -> +5
                        8   -> +6
                        9   -> +7
                        10  -> -6
                        11  -> -5
                        12  -> -4
                        13  -> -3   
                        14  -> -2
                        15  -> -1    (last note color).  do not toggle maj/min

            4 - 15 (ROYGBIV'ish) - notes C through B, with all semitones.
                hold a note by adding more of that color.
                repeat a note by using white.

                if maj, the semitones read:
                   
                    note    relative    key e.g. C
                        4   ->  0   ->  C
                        5   ->  1   ->  C#
                        6   ->  2   ->  D
                        7   ->  3   ->  Eb
                        8   ->  4   ->  E   
                        9   ->  5   ->  F
                        10  ->  6   ->  F#
                        11  ->  7   ->  G
                        12  ->  8   ->  Ab
                        13  ->  9   ->  A
                        14  ->  10  ->  Bb
                        15  ->  11  ->  B
                
                if min, the semitones change for 7 and 8 (make minor third)
                and also for some higher notes:

                        4   ->  0   ->  C
                        5   ->  1   ->  C#
                        6   ->  2   ->  D
                        7   ->  4   ->  E
                        8   ->  3   ->  Eb
                        9   ->  5   ->  F
                        10  ->  6   ->  F#
                        11  ->  7   ->  G
                        12  ->  9   ->  A
                        13  ->  8   ->  Ab
                        14  ->  11  ->  B
                        15  ->  10  ->  Bb
                
                each track has a maj/min label, and there's a global maj/min toggle.
                e.g.
                    track   global toggle   actual key
                    C maj   0               C maj
                    C maj   1               C min
                    C min   0               C min
                    C min   1               C maj

game editor
    BG_COLOR 141
